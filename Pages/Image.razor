@page "/fileupload"
@using System.IO
@inject IHttpClientFactory ClientFactory
@using System.Text.Json
@using System.Text.Json.Serialization
@using BlazorAI.Data
@inject IWebHostEnvironment env
@inject IConfiguration Configuration

<h1>Blazor Image Recognition</h1>

<div class="container">
  <div class="row">
    <div class="col">
      <img class="img-display" src="@imageUrl" />
    </div>
    <div class="col">
      <div>
            @if (imageDescriptions != null)
            {
                <b>Result:</b><br>
                 <ul>
                    @foreach (var description in imageDescriptions)
                    {   
                        <li> @description </li>
                    }
                </ul> 
            }
        </div>
    </div>
  <div class="row" >
    <div class="col">
        <form @onsubmit="ProcessImage">
            <InputFile OnChange="OnInputFileChange"  />
            <br /><br />
            <button type="submit" class="btn btn-success">Start processing</button>
        </form>
    </div>
  </div>
  </div>
</div>




@code {
    private string imageUrl;
    private List<IBrowserFile> files = new List<IBrowserFile>();
    private IList<string> imageDescriptions = new List<string>();

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        files.Clear();
        foreach (var file in e.GetMultipleFiles())
        {
            files.Add(file);
        }
        imageUrl = Path.Combine("media", files[0].Name);
    }

    private async Task UploadMedia()
    {
        foreach (var file in files)
        {
            var path = Path.Combine(Directory.GetCurrentDirectory(), "wwwroot", "media", file.Name);
            var memoryStream = new MemoryStream();
            await file.OpenReadStream().CopyToAsync(memoryStream);
            await File.WriteAllBytesAsync(path, memoryStream.ToArray());
            imageUrl = Path.Combine("media", file.Name);
        }
    }
    private async Task<MediaModel> ProcessImage( )
    {
        await UploadMedia();
        var clarfaiUri = "https://api.clarifai.com/v2/users/clarifai/apps/main/models/general-image-recognition/versions/aa7f35c01e0642fda5cf400f543e7c40/outputs";
        var apiKey = Configuration.GetValue<string>("ClarifaiApiKey");
        var client = ClientFactory.CreateClient();
        client.DefaultRequestHeaders.Add("Authorization", $"Key {apiKey}");
        client.DefaultRequestHeaders.Add("Accept", "application/json");
        var imageBytes = await File.ReadAllBytesAsync(Path.Combine(env.WebRootPath, imageUrl));
        var imageBase64 = Convert.ToBase64String(imageBytes);
        var request = new
        {
            inputs = new[]
            {
                new
                {
                    data = new
                    {
                        image = new
                        {
                            base64 = imageBase64
                        }
                    }
                }
            }
        };
        var response = await client.PostAsJsonAsync(clarfaiUri, request);
        var responseContent = await response.Content.ReadAsStringAsync();
        var result = JsonSerializer.Deserialize<MediaModel>(responseContent);

        foreach (var item in result.outputs[0].data.concepts)
        {
            imageDescriptions.Add(item.name);
        }
        return result;
    }
}